/*
 * generated by Xtext
 */
grammar InternalCustomerDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.wwu.pi.acse.customerDsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.wwu.pi.acse.customerDsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.wwu.pi.acse.customerDsl.services.CustomerDslGrammarAccess;

}

@parser::members {

 	private CustomerDslGrammarAccess grammarAccess;
 	
    public InternalCustomerDslParser(TokenStream input, CustomerDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CustomerDb";	
   	}
   	
   	@Override
   	protected CustomerDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCustomerDb
entryRuleCustomerDb returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerDbRule()); }
	 iv_ruleCustomerDb=ruleCustomerDb 
	 { $current=$iv_ruleCustomerDb.current; } 
	 EOF 
;

// Rule CustomerDb
ruleCustomerDb returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerDbAccess().getCustomersCustomerParserRuleCall_0_0()); 
	    }
		lv_customers_0_0=ruleCustomer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerDbRule());
	        }
       		add(
       			$current, 
       			"customers",
        		lv_customers_0_0, 
        		"Customer");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerDbAccess().getOrdersOrderParserRuleCall_1_0()); 
	    }
		lv_orders_1_0=ruleOrder		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerDbRule());
	        }
       		add(
       			$current, 
       			"orders",
        		lv_orders_1_0, 
        		"Order");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerDbAccess().getProductsProductParserRuleCall_2_0()); 
	    }
		lv_products_2_0=ruleProduct		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerDbRule());
	        }
       		add(
       			$current, 
       			"products",
        		lv_products_2_0, 
        		"Product");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleCustomer
entryRuleCustomer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCustomerRule()); }
	 iv_ruleCustomer=ruleCustomer 
	 { $current=$iv_ruleCustomer.current; } 
	 EOF 
;

// Rule Customer
ruleCustomer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Customer' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCustomerAccess().getCustomerKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCustomerAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCustomerAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='name' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCustomerAccess().getNameKeyword_3());
    }
(
(
		lv_fullName_4_0=RULE_STRING
		{
			newLeafNode(lv_fullName_4_0, grammarAccess.getCustomerAccess().getFullNameSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCustomerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"fullName",
        		lv_fullName_4_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCustomerAccess().getAddressesAddressParserRuleCall_5_0()); 
	    }
		lv_addresses_5_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCustomerRule());
	        }
       		add(
       			$current, 
       			"addresses",
        		lv_addresses_5_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCustomerAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleAddress
entryRuleAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressRule()); }
	 iv_ruleAddress=ruleAddress 
	 { $current=$iv_ruleAddress.current; } 
	 EOF 
;

// Rule Address
ruleAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAddressAccess().getStreetAddressParserRuleCall_0()); 
    }
    this_StreetAddress_0=ruleStreetAddress
    { 
        $current = $this_StreetAddress_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAddressAccess().getPOBoxParserRuleCall_1()); 
    }
    this_POBox_1=rulePOBox
    { 
        $current = $this_POBox_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStreetAddress
entryRuleStreetAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStreetAddressRule()); }
	 iv_ruleStreetAddress=ruleStreetAddress 
	 { $current=$iv_ruleStreetAddress.current; } 
	 EOF 
;

// Rule StreetAddress
ruleStreetAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Address' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStreetAddressAccess().getAddressKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStreetAddressAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStreetAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStreetAddressAccess().getLeftCurlyBracketKeyword_2());
    }
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3(), 0);
	 				}
					({true}?=>(	otherlv_4='street' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStreetAddressAccess().getStreetKeyword_3_0_0());
    }
(
(
		lv_street_5_0=RULE_STRING
		{
			newLeafNode(lv_street_5_0, grammarAccess.getStreetAddressAccess().getStreetSTRINGTerminalRuleCall_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStreetAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"street",
        		lv_street_5_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3(), 1);
	 				}
					({true}?=>(	otherlv_6='city' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStreetAddressAccess().getCityKeyword_3_1_0());
    }
(
(
		lv_city_7_0=RULE_STRING
		{
			newLeafNode(lv_city_7_0, grammarAccess.getStreetAddressAccess().getCitySTRINGTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStreetAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"city",
        		lv_city_7_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3(), 2);
	 				}
					({true}?=>(	otherlv_8='zip' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStreetAddressAccess().getZipKeyword_3_2_0());
    }
(
(
		lv_zip_9_0=RULE_STRING
		{
			newLeafNode(lv_zip_9_0, grammarAccess.getStreetAddressAccess().getZipSTRINGTerminalRuleCall_3_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStreetAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"zip",
        		lv_zip_9_0, 
        		"STRING");
	    }

)
)))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getStreetAddressAccess().getUnorderedGroup_3());
	}

)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStreetAddressAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePOBox
entryRulePOBox returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPOBoxRule()); }
	 iv_rulePOBox=rulePOBox 
	 { $current=$iv_rulePOBox.current; } 
	 EOF 
;

// Rule POBox
rulePOBox returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='POBox' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPOBoxAccess().getPOBoxKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPOBoxAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPOBoxAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='number' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPOBoxAccess().getNumberKeyword_3());
    }
(
(
		lv_number_4_0=RULE_INT
		{
			newLeafNode(lv_number_4_0, grammarAccess.getPOBoxAccess().getNumberINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"number",
        		lv_number_4_0, 
        		"INT");
	    }

)
)	otherlv_5='zip' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPOBoxAccess().getZipKeyword_5());
    }
(
(
		lv_zip_6_0=RULE_STRING
		{
			newLeafNode(lv_zip_6_0, grammarAccess.getPOBoxAccess().getZipSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPOBoxRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"zip",
        		lv_zip_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPOBoxAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleOrder
entryRuleOrder returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrderRule()); }
	 iv_ruleOrder=ruleOrder 
	 { $current=$iv_ruleOrder.current; } 
	 EOF 
;

// Rule Order
ruleOrder returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Order' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOrderAccess().getOrderKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOrderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrderAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='by' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOrderAccess().getByKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getOrderAccess().getCustomerCustomerCrossReference_4_0()); 
	}

)
)	otherlv_5='to' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOrderAccess().getToKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrderRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getOrderAccess().getAddressAddressCrossReference_6_0()); 
	}

)
)(	otherlv_7='via' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOrderAccess().getViaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrderAccess().getChannelOrderChannelEnumRuleCall_7_1_0()); 
	    }
		lv_channel_8_0=ruleOrderChannel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrderRule());
	        }
       		set(
       			$current, 
       			"channel",
        		lv_channel_8_0, 
        		"OrderChannel");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOrderAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleProduct
entryRuleProduct returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProductRule()); }
	 iv_ruleProduct=ruleProduct 
	 { $current=$iv_ruleProduct.current; } 
	 EOF 
;

// Rule Product
ruleProduct returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Product' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProductAccess().getProductKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getProductAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProductRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)?(
(
		lv_price_2_0=RULE_INT
		{
			newLeafNode(lv_price_2_0, grammarAccess.getProductAccess().getPriceINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProductRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"price",
        		lv_price_2_0, 
        		"INT");
	    }

)
)?)
;





// Rule OrderChannel
ruleOrderChannel returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='web' 
	{
        $current = grammarAccess.getOrderChannelAccess().getWEBEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getOrderChannelAccess().getWEBEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='mail' 
	{
        $current = grammarAccess.getOrderChannelAccess().getMAILEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getOrderChannelAccess().getMAILEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='phone' 
	{
        $current = grammarAccess.getOrderChannelAccess().getPHONEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getOrderChannelAccess().getPHONEEnumLiteralDeclaration_2()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


